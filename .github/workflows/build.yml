name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          python3-pip \
          openjdk-11-jdk  # JDK 11 works with modern Android builds

    - name: Install Android SDK and NDK
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        
        # Install Android SDK
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d ~/.android/cmdline-tools
        mv ~/.android/cmdline-tools/cmdline-tools ~/.android/cmdline-tools/latest
        
        # Install NDK 25b (modern version compatible with Python 3.10)
        wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip android-ndk-r25b-linux.zip -d ~/.android
        mv ~/.android/android-ndk-r25b ~/.android/android-ndk
        
        # Install SDK components
        yes | ~/.android/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/.android "platform-tools" "platforms;android-34" "build-tools;34.0.0"
        ~/.android/cmdline-tools/latest/bin/sdkmanager --licenses || true

        echo "ANDROID_HOME=$HOME/.android" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/.android/android-ndk" >> $GITHUB_ENV

    - name: Install Buildozer
      run: |
        pip install --upgrade pip virtualenv
        pip install buildozer cython==0.29.36

    - name: Configure buildozer.spec
      run: |
        # Create buildozer.spec if not exists
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

        # Update requirements and settings
        sed -i "s|^requirements = .*|requirements = python3,kivy==2.3.0,reportlab==4.1.0,plyer,android|" buildozer.spec
        sed -i "s|^#android.ndk_path = .*|android.ndk_path = $HOME/.android/android-ndk|" buildozer.spec
        sed -i "s|^android.api = .*|android.api = 34|" buildozer.spec
        sed -i "s|^android.minapi = .*|android.minapi = 21|" buildozer.spec
        sed -i "s|^android.ndk = .*|android.ndk = 25b|" buildozer.spec
        echo "p4a.branch = master" >> buildozer.spec

    - name: Patch ReportLab
      run: |
        # Disable C extensions completely
        export REPORTLAB_NO_C_EXTENSIONS=1
        find ~/ -name '_rl_accel.c' -exec rm -f {} \;
        find ~/ -name '_renderPM.c' -exec rm -f {} \;
        
        # Create dummy modules
        mkdir -p ~/.dummy_patch/reportlab/src/rl_addons/rl_accel
        echo "def _dummy(): pass" > ~/.dummy_patch/reportlab/src/rl_addons/rl_accel/__init__.py
        echo "def _dummy(): pass" > ~/.dummy_patch/reportlab/src/rl_addons/rl_accel/_rl_accel.py
        
        # Add to PYTHONPATH
        echo "PYTHONPATH=~/.dummy_patch:$PYTHONPATH" >> $GITHUB_ENV

    - name: Build APK
      run: |
        export PATH=$PATH:$ANDROID_HOME/build-tools/34.0.0
        export REPORTLAB_NO_C_EXTENSIONS=1
        buildozer -v android release
        mkdir dist
        cp bin/*.apk dist/

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: gate-survey-app
        path: dist/*.apk
        retention-days: 5